---
params:
  last_date: "`r { Sys.setenv(TZ='America/Sao_Paulo'); format(Sys.time(), '%d %B, %Y %H:%M') }`"
title: "Partido Missão - Contagem - Ultima atualização ({{< meta params.last_date >}})"
date: today
format: 
  dashboard:
    logo: https://partidomissao.com/images/onca.svg
    nav-buttons:
      - icon: instagram
        href: https://www.instagram.com/partidomissao/
      - icon: twitter
        href: https://x.com/PartidoMissao
      - icon: linkedin
        href: https://www.linkedin.com/in/diegomscoelho/
      - icon: github
        href: https://github.com/diegomscoelho/missao_dash
    theme: [theme/custom.scss]
    orientation: columns
    include-after-body: "theme/footer.html"
---

```{r}
#| label: load-packages
#| message: false
#| warning: false

library(ggplot2)
library(dplyr)
library(bizdays)
library(DT)
library(gt)

source("R/formatting.R")

Sys.setenv(TZ='America/Sao_Paulo');

data <- format(Sys.time(), '%d-%m-%Y %H:%M')

all <- read.csv("data/mbl.csv", header = T)
colnames(all) <- c("abbrev_state", "votos", "DATE")
df <- all %>% filter(as.Date(DATE) == max(as.Date(DATE)))

total <- 547043
apo_n <- sum(df$votos)
apo_perc <- round(100 * apo_n / total, 2)

bizdays <- bizdays::bizseq(as.character(format(Sys.time(), '%Y-%m-%d')), '2025-06-30', "Brazil/ANBIMA") %>% length()

last_day <- all %>% filter(as.Date(DATE) == sort(unique(as.Date(DATE)), decreasing = TRUE)[2])
day_diff = df$votos - last_day$votos

df$diff <- day_diff

day_inc <- apo_n - last_day %>%
  pull(votos) %>% sum()

states <- sf::st_read("data/BR.shp", quiet = T)
colnames(states)[2] <- "abbrev_state"
colnames(states)[5] <- "name_region"

tse <- read.table("data/tse.tsv", header = T)
colnames(tse)[1] = "abbrev_state"
tse$VV <- as.numeric(gsub("[.]", "", tse$VV))
tse$EV <- as.numeric(gsub("[.]", "", tse$EV))
tse <- tse %>% mutate(VV05 = VV * 0.005, EV01 = EV * 0.001)

states_join = list(df, tse, states)
states_join <- left_join(states, df, by = "abbrev_state")
states_join <- left_join(states_join, tse, by = "abbrev_state")

tab <- states_join %>% as.data.frame() %>% select(nam_stt, name_region, abbrev_state, votos, EV01, diff) %>%
  mutate(EV01 = round(EV01, 0)) %>%
  rbind(., list("Total","Total", "Total", sum(.$votos), total, day_inc))

#########
# MODEL #
#########

library(mgcv)

model <- gam(votos ~ s(as.numeric(as.Date(DATE))), data = (all %>% group_by(DATE) %>% summarise(votos = sum(votos))))

extended_dates <- seq.Date(as.Date(unique(df$DATE)), as.Date("2025-11-27"), by = "days")
new_data <- data.frame(DATE = extended_dates)
new_data$votos <- predict(model, newdata = new_data)

doom_day <- new_data %>% filter(votos < total) %>% pull(DATE) %>% max()

leg_size = 10

my_palette <- colorRampPalette(c("#272727", "grey", "#FCBD27"))

```

# Missão

## Column {width="75%"}

### Row {height="50%"}

#### Column {height= "50%"}

::: {.valuebox color="#FCBD27"}
Faltam

`r number(total - apo_n)`

apoios válidos e `r bizdays` dias úteis
:::

::: {.valuebox color="secondary" width="20%"}
Apoiamentos válidos

`r number(apo_n)`

`r change(0, 0 ,when = paste0("Porcentagem (", apo_perc, "%)"), more = paste(day_inc, "novos"))`

Meta diária: `r round((total - apo_n + day_inc) / bizdays + 0.5, 0)` apoios até 30/06/2025
:::

#### Column {.tabset}

```{r}
#| padding: 0
#| title: Absoluto
#| fig.width: 6
#| fig.height: 6
 
fig2 <- ggplot() +
  geom_sf(data=states_join, aes(fill=log10(votos + 1)), color= "#272727", size=.15) +
  scale_fill_gradient2(mid="#272727", high="#FCBD27") +
  labs(subtitle="           Apoiamentos por estado", size=leg_size, fill = "Apoiamentos  \n(log10)") +
  theme_void() + theme(title = element_text(size = 16))

print(fig2)

```

```{r}
#| padding: 0px
#| color: "white"
#| title: Ajustado
#| fig.width: 6
#| fig.height: 6

fig1 <- ggplot() +
  geom_sf(data=states_join, aes(fill=votos / EV * 1e+03), color= "#272727", size=.15) +
  scale_fill_gradient2(na.value="white", low="#272727", mid = "grey", high="#FCBD27", midpoint = 1) +
  labs(subtitle="           Apoiamentos por estado (A) / Apoiamentos mínimos (AM)",
       size=leg_size, fill = "A/AM      ") +
  theme_void() + theme(title = element_text(size = 14))

print(fig1)

```

```{r}
#| padding: 0px
#| title: Aptos
#| fig.width: 6
#| fig.height: 6

fig3 <- ggplot() +
  geom_sf(data=states_join, aes(fill= ifelse(votos > EV01, "Sim", "Não")), color= "#272727", size=.15) +
  scale_fill_manual(values = c("#272727", "#FCBD27")) +
  labs(subtitle = "           Estados aptos a ter diretório", size=8, fill = "Aptos        ") +
  theme_void() + theme(title = element_text(size = 14))

print(fig3)

```

### Row {height="50%"}

#### Column {width="50%"}

```{r}
#| padding: 0px

scientific_10 <- function(x) {
  parse(text=gsub("e", " %*% 10^", scales::scientific_format()(x)))
}

all %>% group_by(DATE) %>% summarise(votos = sum(votos)) %>%
    # mutate(inc = c(0, diff(votos, differences = 1))) %>%
    ggplot(aes(x = as.Date(DATE), y = votos)) +
    geom_smooth(fullrange=TRUE, method = "gam", color = "#272727", linetype = "dashed") +
    geom_line(size = 1.5, color = "#FCBD27") +
    # geom_col(aes(y= inc * 100), fill = "#FCBD27", alpha = 0.4) +
    labs(title = "Apoiamentos ao longo do tempo",
         x = "",
         y = "Apoiamentos",
         caption = "* Por favor, não leve essa previsão tão a sério.") +
    scale_x_date(limits = as.Date(c("2023-11-03", "2025-11-03")), 
                 date_breaks = "1 months", 
                 date_labels = "%b %Y") +
    scale_y_continuous(limits = c(0, 730000), expand = c(0, 0), labels = scientific_10) + #, sec.axis = sec_axis(~.*1/100, name="Taxa de apoio diário")) +
    geom_hline(yintercept = total, linetype = "dashed", color = "red") +
    geom_vline(xintercept = doom_day, linetype = "dashed", color = "#FCBD27") +
    geom_text(mapping=aes(x=doom_day, y=0, label=paste0("Data prevista:\n", doom_day)), size=5, angle=0, vjust=-0.4, hjust=-0.1, color = "#FCBD27") +
    geom_text(mapping=aes(y=total, x=as.Date(min(DATE)), label="Meta de apoiamentos"), size=5, angle=0, vjust=-0.4, hjust=--0.6, color = "red") +
    theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

#### Column {.tabset}

```{r}
#| padding: 0px
#| title: Estado
#| fig.width: 6
#| fig.height: 6

fig5 <- tab %>% filter(abbrev_state != "Total") %>% mutate(prop = round(votos/sum(votos)*100,1)) %>%
  filter(prop != 0) %>%
  arrange(desc(abbrev_state)) %>%
  mutate(lab.ypos = cumsum(prop) - 0.5*prop) %>%
  mutate(label = paste0(abbrev_state,"\n",prop, "%")) %>%
  ggplot(aes(x = "", y = prop, fill = abbrev_state)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  scale_fill_manual(values = my_palette(11)) +
  coord_polar("y", start = 0) +
  ggrepel::geom_label_repel (aes(y = lab.ypos, segment.size = 0,
                            label = label),
                            color = "white", nudge_x = 0.7) +
  theme_void() + labs(title = "   Participação por estado no total") +
  theme(legend.position="none", title = element_text(size = 14))

print(fig5)

```

```{r}
#| padding: 0px
#| title: Região
#| fig.width: 6
#| fig.height: 6

fig6 <- tab %>% filter(abbrev_state != "Total") %>%
  group_by(name_region) %>% summarise(votos = sum(votos)) %>%
  mutate(prop = round(votos/sum(votos)*100,1)) %>%
  filter(prop != 0) %>%
  arrange(desc(name_region)) %>%
  mutate(lab.ypos = cumsum(prop) - 0.5*prop) %>%
  mutate(label = paste0(name_region,"\n",prop, "%")) %>%
  ggplot(aes(x = "", y = prop, fill = name_region)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  scale_fill_manual(values = my_palette(4)) +
  coord_polar("y", start = 0) +
  ggrepel::geom_label_repel (aes(y = lab.ypos, segment.size = 0,
                            label = label),
                            color = "white", nudge_x = 0.7) +
  theme_void() + labs(title = "   Participação por região no total") +
  theme(legend.position="none", title = element_text(size = 14))

print(fig6)

```

## Column {width="25%"}

```{r}
#| message: false
#| fig.width: 4
#| fig.height: 10
#| padding: 0px

fig4 <- tab %>% filter(abbrev_state != "Total") %>%
  mutate(perc = ifelse(round(votos /EV01 * 100, 1) >= 100, 100, round(votos /EV01 * 100, 1))) %>%
  mutate(label = paste0(perc, "%")) %>%
  ggplot(aes(x = reorder(paste0("(",votos,") ",abbrev_state), votos/ EV01), y = perc, fill = ifelse(perc >= 100, "Sim", "Não"))) +
  scale_y_continuous(expand = expansion(mult = c(0, .1)), breaks = c(0, 25, 50, 75, 100)) +
  geom_col() + scale_fill_manual(values = c("#272727", "#FCBD27")) +
  theme_classic() + coord_flip(ylim = c(0, 110)) +
  labs(fill = "Aptos", x = "(Apoiamentos totais) Sigla do estado",
  y = "Porcentagem (apoiamentos para meta)", title = "Apoiamentos mínimos por estado (%)",
  caption = "* Porcentagem máxima da figura <= 100%") +
  geom_text(aes(label= ifelse(votos >= EV01, label, paste0(label, " (",EV01-votos,")"))),position = position_dodge2(0.9), hjust = -0.2, fontface=2, cex=2.5, show.legend = F) +
  theme(title = element_text(size = 8),axis.title = element_text(size = 10),
        legend.position = "inside", legend.position.inside = c(.85, .5),
        plot.caption.position = "plot", plot.caption = element_text(hjust = 0.5))

print(fig4)

```

```{r}
#| message: false
#| warning: false

msg <- paste0("** Última atualização: ", data, "     ")

all_states <- tab %>% filter(abbrev_state != "Total") %>%
  mutate(perc = ifelse(round(votos /EV01 * 100, 1) >= 100, 100, round(votos /EV01 * 100, 1))) %>%
  mutate(label = paste0(perc, "%")) %>%
  ggplot(aes(x = reorder(paste0("(",votos,") ",abbrev_state), votos/ EV01), y = perc, fill = ifelse(perc >= 100, "Sim", "Não"))) +
  scale_y_continuous(expand = expansion(mult = c(0, .1)), breaks = c(0, 25, 50, 75, 100)) +
  geom_col() + scale_fill_manual(values = c("#272727", "#FCBD27")) +
  theme_classic() + coord_flip(ylim = c(0, 110)) +
  labs(fill = "Aptos", x = "(Apoiamentos totais) Sigla do estado",
  y = "Porcentagem (apoiamentos para meta)", title = "Apoiamentos mínimos por estado (%)",
  caption = paste0("* Porcentagem máxima da figura <= 100%\n", msg)) +
  geom_text(aes(label= ifelse(votos >= EV01, label, paste0(label, " (",EV01-votos,")"))),position = position_dodge2(0.9), hjust = -0.2, fontface=2, cex=2.5, show.legend = F) +
  theme(title = element_text(size = 8),axis.title = element_text(size = 10),
        legend.position = "inside", legend.position.inside = c(.85, .5),
        plot.caption.position = "plot", plot.caption = element_text(hjust = 0.5))

jpeg(filename = "fig/states.jpeg", width = 1080, height = 1080, res = 250)
all_states
garbage <- dev.off()

```

# Overview

```{r}
#| message: false
#| fig.width: 16
#| fig.height: 8
#| padding: 0px

leg_size = 10

fig1 <- ggplot() +
  geom_sf(data=states_join, aes(fill=votos / EV * 1e+03), color= "#272727", size=.15) +
  scale_fill_gradient2(na.value="white", low="#272727", mid = "grey", high="#FCBD27", midpoint = 1) +
  labs(subtitle="           Apoiamentos por estado (A) / Apoiamentos mínimos (AM)",
       size=leg_size, fill = "A/AM") +
  theme_void()

fig2 <- ggplot() +
  geom_sf(data=states_join, aes(fill=log10(votos + 1)), color= "#272727", size=.15) +
  scale_fill_gradient2(mid="#272727", high="#FCBD27") +
  labs(subtitle="           Apoiamentos por estado", size=leg_size, fill = "Apoiamentos\n(log10)") +
  theme_void()

fig3 <- ggplot() +
  geom_sf(data=states_join, aes(fill= ifelse(votos > EV01, "Sim", "Não")), color= "#272727", size=.15) +
  scale_fill_manual(values = c("#272727", "#FCBD27")) +
  labs(subtitle = "           Estados aptos a ter diretório", size=8, fill = "Aptos") +
  theme_void()

msg <- paste0("** Última atualização: ", data)

fig4 <- tab %>% filter(abbrev_state != "Total") %>%
  mutate(perc = ifelse(round(votos /EV01 * 100, 1) >= 100, 100, round(votos /EV01 * 100, 1))) %>%
  mutate(label = paste0(perc, "%")) %>%
  ggplot(aes(x = reorder(paste0("(",votos,") ",abbrev_state), votos/ EV01), y = perc, fill = ifelse(perc >= 100, "Sim", "Não"))) +
  scale_y_continuous(expand = expansion(mult = c(0, .1)), breaks = c(0, 25, 50, 75, 100)) +
  geom_col() + scale_fill_manual(values = c("#272727", "#FCBD27")) +
  theme_classic() + coord_flip(ylim = c(0, 120)) +
  labs(fill = "Aptos", x = "(Apoiamentos totais) Sigla do estado",
  y = "Porcentagem (apoiamentos para meta)", title = "Apoiamentos mínimos por estado (%)",
  caption = paste0("* Porcentagem máxima da figura <= 100%\n", msg)) +
  geom_text(aes(label= ifelse(votos >= EV01, label, paste0(label, " (",EV01-votos,")"))),position = position_dodge2(0.9), hjust = -0.2, fontface=2, cex=2.5, show.legend = F) +
  theme(title = element_text(size = 8),axis.title = element_text(size = 10),
        legend.position = "inside", legend.position.inside = c(.85, .5),
        plot.caption.position = "plot", plot.caption = element_text(hjust = 0.5))

my_palette <- colorRampPalette(c("#272727", "grey", "#FCBD27"))

fig5 <- tab %>% filter(abbrev_state != "Total") %>% mutate(prop = round(votos/sum(votos)*100,1)) %>%
  filter(prop != 0) %>%
  arrange(desc(abbrev_state)) %>%
  mutate(lab.ypos = cumsum(prop) - 0.5*prop) %>%
  mutate(label = paste0(abbrev_state,"\n",prop, "%")) %>%
  ggplot(aes(x = "", y = prop, fill = abbrev_state)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  scale_fill_manual(values = my_palette(11)) +
  coord_polar("y", start = 0) +
  ggrepel::geom_label_repel (aes(y = lab.ypos, segment.size = 0,
                            label = label),
                            color = "white", nudge_x = 0.7) +
  theme_void() + labs(title = "   Participação por estado no total") +
  theme(legend.position="none")

cowplot::plot_grid(cowplot::plot_grid(fig2, fig3, fig1, fig5, ncol = 2, scale = c(1,1,1,0.85)), fig4, rel_widths = c(1,0.3))

```

# Dados

## Column {width="50%"}

```{r}
#| message: false
#| warning: false
#| fig.width: 6
#| fig.height: 6

fig_table <- tab |>
  slice(1:nrow(tab)-1) %>% arrange(desc(votos/ EV01)) %>% rbind(., slice(tab, nrow(tab))) |>
  mutate(prop = paste0(round(votos/sum(votos)*100*2,1), "%")) |>
  mutate(perc = ifelse(round(votos /EV01 * 100, 1) >= 100, 1, round(votos /EV01 * 1, 3)), rest = EV01 - votos) |>
  mutate(rest = ifelse(rest <= 0, "-", rest)) %>%
  select(Estado=nam_stt, `Apoios válidos` = votos, `Proporção Total` = prop, Mínimo=EV01, `% do mínimo` = perc, `Faltam` = rest, `Apoios do dia` = diff) |>
  gt() |>
  fmt_percent(`% do mínimo`, decimals = 1) |>
  cols_merge_n_pct(
    col_n = `Mínimo`,
    col_pct = `% do mínimo`
  ) |>
  cols_label(`Mínimo` = "Mínimo (%)") |>
  tab_header(
    title = "Tabela de apoio ao Missão",
    subtitle = paste("Atualização: ", data)
  ) |>
  tab_style(
    style = list(cell_fill(color = "#FCBD27"), cell_text(size = pct(110))),
    locations = cells_body(columns = everything(), rows = length(Estado))
  ) |>
  tab_options(heading.background.color = "#272727", column_labels.background.color = "#FCBD27", data_row.padding = 1, data_row.padding.horizontal = 5)

fig_table |> gtsave(filename = "fig/table.png", expand = 10)

fig_table

```

## Column {width="50%"}

```{r}
all |>
  arrange(desc(DATE)) |>
  datatable(
    colnames = c("Sigla", "Apoiamentos", "Data"),
    extensions = "Buttons",
    options = list(dom = 'Bfrtip', paging = TRUE, buttons = c('csv', 'excel'))
    )
```

```{r}
tse |>
  datatable(
    colnames = c("Sigla", "Votos válidos", "Votos válidos (5%)",
    "Eleitorado válido", "Eleitorado válido (1%)"),
    extensions = "Buttons",
    options = list(dom = 'Bfrtip', paging = TRUE, buttons = c('csv', 'excel'))
    )
```

```{r}
#| message: false
#| warning: false

write.table(paste0("🇧🇷 Apoios válidos: ", apo_n, " (", apo_perc, "%)",
                   "\n🚀 Apoios do dia: ", day_inc, " novos (Parabéns! ", paste(df[as.logical(day_diff), 1], collapse = ", "), ")",
                   "\n🙏 Faltam ", total - apo_n, " apoios válidos",
                   "\n🔮 Previsão: ", doom_day, " (100% apoios validados)"),
                   file="data/msg1.txt", quote=F, col.names=F, row.names=F)

write.table(paste0("🇧🇷 Apoios válidos: ", apo_n, " (", apo_perc, "%)",
                   "\n🚀 Apoios do dia: ", day_inc, " novos (Parabéns! ", paste(df[as.logical(day_diff), 1], collapse = ", "), ")",
                   "\n🙏 Faltam ", total - apo_n, " apoios válidos"),
                   file="data/msg2.txt", quote=F, col.names=F, row.names=F)
```